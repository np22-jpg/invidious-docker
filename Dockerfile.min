FROM docker.io/library/alpine:3.21.0@sha256:21dc6063fd678b478f57c0e13f47560d0ea4eeba26dfc947b2a4f81f686b9f45 AS builder
RUN apk add --no-cache 'crystal=1.8.2-r0' \
    shards \
    sqlite-static \
    yaml-static \
    yaml-dev \
    libxml2-static \ 
    zlib-static \
    openssl-libs-static \
    openssl-dev \
    musl-dev \
    xz-static

WORKDIR /invidious
COPY shard.yml shard.lock ./
RUN shards install

COPY . .

ARG release=1
RUN crystal spec --release \
    --warnings all \
    --link-flags "-lxml2 -llzma"   
RUN if [ "$release" == 1 ] ; then \
        crystal build ./src/invidious.cr \
        --static \
        --release \
        --warnings all \
        --link-flags "-lxml2 -llzma"; \
    else \
        crystal build ./src/invidious.cr \
        --static \
        --warnings all \
        --link-flags "-lxml2 -llzma"; \
    fi

FROM gcr.io/distroless/static-debian12@sha256:5c7e2b465ac6a2a4e5f4f7f722ce43b147dabe87cb21ac6c4007ae5178a1fa58 AS release
# RUN apk add --no-cache librsvg ttf-opensans tini
WORKDIR /invidious
# RUN addgroup -g 1000 -S invidious && \
#     adduser -u 1000 -S invidious -G invidious

# Copy config
COPY --chown=1000 config/config.example.yml config/config.yml

# Get invidious
COPY --from=builder /invidious/invidious ./
COPY --from=builder /invidious/assets assets
COPY --from=builder /invidious/locales locales
COPY --from=builder /invidious/config/sql config/sql
# RUN chmod o+rX -R ./assets ./config ./locales

EXPOSE 3000
USER 1000

# ENTRYPOINT ["/sbin/tini", "--"]
CMD [ "/invidious/invidious" ]