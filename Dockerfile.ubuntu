FROM docker.io/library/ubuntu:22.04@sha256:ca9449d4bae930d098f5d05aa33d0d279db957461b06b16928f65794ba8b3c80 AS builder
RUN apt-get update
RUN apt-get install curl git liblzma-dev libsqlite3-dev -y 
RUN curl -fsSL https://crystal-lang.org/install.sh | bash -s -- --version=1.8

WORKDIR /invidious
COPY shard.yml shard.lock ./
RUN shards install

COPY . .

ARG release=1
RUN crystal spec --release \
    --warnings all \
    --link-flags "-lxml2 -llzma"   
RUN if [[ "${release}" == 1 ]] ; then \
        crystal build ./src/invidious.cr \
        --release \
        --warnings all \
        --link-flags "-lxml2 -llzma"; \
    else \
        crystal build ./src/invidious.cr \
        --warnings all \
        --link-flags "-lxml2 -llzma"; \
    fi


FROM docker.io/library/ubuntu:22.04@sha256:ca9449d4bae930d098f5d05aa33d0d279db957461b06b16928f65794ba8b3c80 AS release
RUN apt-get update && \
    apt-get install libxml2 librsvg2-bin libyaml-0-2 libsqlite3-0 openssl libevent-2.1-7 tini -y

WORKDIR /invidious
RUN groupadd invidious && \
    useradd invidious -u 1000 -g invidious

# Copy config
COPY --chown=invidious config/config.example.yml config/config.yml
RUN sed -i 's/host: \(127.0.0.1\|localhost\)/host: invidious-db/' config/config.yml

# Get invidious
COPY --from=builder /invidious/invidious ./
COPY --from=builder /invidious/assets assets
COPY --from=builder /invidious/locales locales
COPY --from=builder /invidious/config/sql config/sql
RUN chmod o+rX -R ./assets ./config ./locales

EXPOSE 3000
USER invidious

ENTRYPOINT ["/usr/bin/tini", "--"]
CMD [ "/invidious/invidious" ]