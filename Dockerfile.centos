FROM docker.io/library/almalinux:8@sha256:2f6245ff2d8d8184d179d46f649149b9077fb02d2b338059251729df63109a1a AS builder
RUN dnf install dnf-plugins-core -y && \
    dnf config-manager --set-enabled powertools && \
    dnf install git-core xz-devel sqlite-libs libxml2-devel libyaml-devel sqlite-devel openssl-devel -y 
RUN curl -fsSL https://crystal-lang.org/install.sh | bash -s -- --version=1.8

WORKDIR /invidious
COPY shard.yml shard.lock ./
RUN shards install 

COPY . .

ARG release=1
RUN crystal spec --release \
    --warnings all \
    --link-flags "-lxml2 -llzma"   
RUN if [[ "${release}" == 1 ]] ; then \
        crystal build ./src/invidious.cr \
        --release \
        --warnings all \
        --link-flags "-lxml2 -llzma"; \
    else \
        crystal build ./src/invidious.cr \
        --warnings all \
        --link-flags "-lxml2 -llzma"; \
    fi

FROM docker.io/library/almalinux:8@sha256:2f6245ff2d8d8184d179d46f649149b9077fb02d2b338059251729df63109a1a AS release
RUN dnf install epel-release -y && \
    dnf install libxml2 librsvg2 librsvg2-tools libyaml sqlite openssl libevent tini -y && \
    dnf clean all

WORKDIR /invidious
RUN groupadd invidious && \
    useradd invidious -u 1000 -g invidious

# Copy config
COPY --chown=invidious config/config.example.yml config/config.yml
RUN sed -i 's/host: \(127.0.0.1\|localhost\)/host: invidious-db/' config/config.yml

# Get invidious
COPY --from=builder /invidious/invidious ./
COPY --from=builder /invidious/assets assets
COPY --from=builder /invidious/locales locales
COPY --from=builder /invidious/config/sql config/sql
RUN chmod o+rX -R ./assets ./config ./locales

EXPOSE 3000
USER invidious

ENTRYPOINT ["/usr/bin/tini", "--"]
CMD [ "/invidious/invidious" ]