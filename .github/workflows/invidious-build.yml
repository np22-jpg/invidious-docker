name: Build and Upload Static Invidious Binaries

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '20 03 * * *'  # 3:20am everyday

jobs:
  build_invidious: 
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crystalversions: [ "1.10", "1.9", "1.8" ]
        triple: [ aarch64-unknown-linux-musl, x86_64-unknown-linux-musl ]
        patchsets: [ vanilla, redis ]
        include:
          - crystalversions: "1.8"
            is_supported: true

    permissions:
      packages: write

    steps:

      # INSTALL TOOLS AND DEPENDENCIES

      - uses: crystal-lang/install-crystal@v1
        with:
          crystal: ${{ matrix.crystalversions }}

      - name: Install dependencies
        run: |
          sudo apt install -y curl git liblzma-dev libsqlite3-dev musl musl-dev clang

      # CHECKOUT

      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # PREPARE

      - name: Get patches
        run: |
          chmod u+x scripts/*
          ./scripts/get-patches.sh
          ./scripts/apply-patches.sh ${{ matrix.patchsets }}

      - name: Cache Shards
        uses: actions/cache@v3
        with:
          path: ./invidious/lib
          key: shards-${{ hashFiles('invidious/shard.lock') }}

      - name: Install shards
        run: |
          shards install
        working-directory: ./invidious

      # CHECK

      - name: Unit test
        if: matrix.triple == 'x86_64-unknown-linux-musl'
        run: |
          crystal spec --release \
          --warnings all \
          --link-flags "-lxml2 -llzma"
        working-directory: ./invidious

      # BUILD

      - name: Compile
        run: |
          crystal build ./src/invidious.cr \
          --static \
          --release \
          --warnings all \
          --cross-compile --target "${{ matrix.triple }}" \
          --link-flags "-lxml2 -llzma"; 
          pwd
          ls -la
        working-directory: ./invidious

      # UPLOAD

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: invidious-${{ matrix.patchsets }}-${{ matrix.crystalversions }}-${{ matrix.triple }}
          path: ./invidious-docker/invidious/invidious